{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/inventory.service\";\nimport * as i2 from \"@angular/forms\";\nexport class Warehouse2Component {\n  constructor(inventoryService, fb) {\n    this.inventoryService = inventoryService;\n    this.fb = fb;\n    this.title = 'warehouse-manager';\n    this.warehouseId = 2;\n    this.itemToUpdate = {\n      id: 0,\n      name: \"\",\n      brand: \"\",\n      imageUrl: \"\",\n      barcode: \"\",\n      warehouseId: 2\n    };\n    this.itemsToDelete = {\n      id: 0,\n      name: \"\",\n      brand: \"\",\n      imageUrl: \"\",\n      barcode: \"\",\n      warehouseId: 2\n    };\n  }\n  ngOnInit() {\n    this.getInventory();\n  }\n  getInventory() {\n    this.inventoryService.getInventory(this.warehouseId).subscribe(response => {\n      this.inventoryItems = response;\n    });\n    console.log(\"Inside the get method\");\n  }\n  addInventory(addForm) {\n    document.getElementById('add-inventory-button')?.click();\n    // console.log(addForm)\n    this.inventoryService.addInventory(addForm).subscribe(response => {\n      console.log(response);\n      this.getInventory();\n    });\n    console.log(\"Inside the add method\");\n  }\n  editInventoryItem() {\n    this.inventoryService.updateInventoryItem(this.itemToUpdate).subscribe(response => {\n      console.log(response);\n      this.getInventory();\n    });\n    console.log(\"Inside the edit method\");\n  }\n  deleteInventoryItem() {\n    this.inventoryService.deleteinventoryItem(this.itemToUpdate.id).subscribe(response => {\n      console.log(response);\n      this.getInventory();\n    });\n    console.log(\"inside the delete method\");\n  }\n  sendToUpdateModal(inventoryItem) {\n    this.itemToUpdate.id = inventoryItem.id;\n    this.itemToUpdate.brand = inventoryItem.brand;\n    this.itemToUpdate.name = inventoryItem.name;\n    this.itemToUpdate.imageUrl = inventoryItem.imageUrl;\n    this.itemToUpdate.barcode = inventoryItem.barcode;\n    this.itemToUpdate.warehouseId = inventoryItem.warehouseId;\n  }\n  sentToDeleteModal(inventoryItem) {\n    this.itemToUpdate.id = inventoryItem.id;\n    this.itemToUpdate.brand = inventoryItem.brand;\n    this.itemToUpdate.name = inventoryItem.name;\n    this.itemToUpdate.imageUrl = inventoryItem.imageUrl;\n    this.itemToUpdate.barcode = inventoryItem.barcode;\n  }\n  onOpenModal(inventoryItem, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addItemModal');\n    }\n    if (mode === 'edit') {\n      button.setAttribute('data-target', '#editItemModal');\n    }\n    console.log(\"inside onOpenModel\" + inventoryItem);\n    if (mode === 'delete') {\n      button.setAttribute('data-target', '#deleteItemModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n}\nWarehouse2Component.ɵfac = function Warehouse2Component_Factory(t) {\n  return new (t || Warehouse2Component)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nWarehouse2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Warehouse2Component,\n  selectors: [[\"app-warehouse1\"]],\n  inputs: {\n    warehouseId: \"warehouseId\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function Warehouse2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"warehouse2 works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"body[_ngcontent-%COMP%]{margin-top:20px;\\r\\n  background-color:#eee;\\r\\n  }\\r\\n  .card[_ngcontent-%COMP%] {\\r\\n      margin-bottom: 24px;\\r\\n      box-shadow: 0 2px 3px #e4e8f0;\\r\\n  }\\r\\n  .card[_ngcontent-%COMP%] {\\r\\n      position: relative;\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      min-width: 0;\\r\\n      word-wrap: break-word;\\r\\n      background-color: #fff;\\r\\n      background-clip: border-box;\\r\\n      border: 1px solid #eff0f2;\\r\\n      border-radius: 1rem;\\r\\n  }\\r\\n  .avatar-md[_ngcontent-%COMP%] {\\r\\n      height: 4rem;\\r\\n      width: 4rem;\\r\\n  }\\r\\n  .rounded-circle[_ngcontent-%COMP%] {\\r\\n      border-radius: 50%!important;\\r\\n  }\\r\\n  .img-thumbnail[_ngcontent-%COMP%] {\\r\\n      padding: 0.25rem;\\r\\n      background-color: #f1f3f7;\\r\\n      border: 1px solid #eff0f2;\\r\\n      border-radius: 0.75rem;\\r\\n  }\\r\\n  .avatar-title[_ngcontent-%COMP%] {\\r\\n      align-items: center;\\r\\n      background-color: #3b76e1;\\r\\n      color: #fff;\\r\\n      display: flex;\\r\\n      font-weight: 500;\\r\\n      height: 100%;\\r\\n      justify-content: center;\\r\\n      width: 100%;\\r\\n  }\\r\\n  .bg-soft-primary[_ngcontent-%COMP%] {\\r\\n      background-color: rgba(59,118,225,.25)!important;\\r\\n  }\\r\\n  a[_ngcontent-%COMP%] {\\r\\n      text-decoration: none!important;\\r\\n  }\\r\\n  .badge-soft-danger[_ngcontent-%COMP%] {\\r\\n      color: #f56e6e !important;\\r\\n      background-color: rgba(245,110,110,.1);\\r\\n  }\\r\\n  .badge-soft-success[_ngcontent-%COMP%] {\\r\\n      color: #63ad6f !important;\\r\\n      background-color: rgba(99,173,111,.1);\\r\\n  }\\r\\n  .mb-0[_ngcontent-%COMP%] {\\r\\n      margin-bottom: 0!important;\\r\\n  }\\r\\n  .badge[_ngcontent-%COMP%] {\\r\\n      display: inline-block;\\r\\n      padding: 0.25em 0.6em;\\r\\n      font-size: 75%;\\r\\n      font-weight: 500;\\r\\n      line-height: 1;\\r\\n      color: #fff;\\r\\n      text-align: center;\\r\\n      white-space: nowrap;\\r\\n      vertical-align: baseline;\\r\\n      border-radius: 0.75rem;\\r\\n  }\\r\\n\\r\\n  .card-title[_ngcontent-%COMP%] {\\r\\n    font-size: 40px;\\r\\n  }\\r\\n\\r\\n  #add-button[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n\\r\\n  .card-image[_ngcontent-%COMP%] {\\r\\n    max-width: 150px;\\r\\n    max-height: 150px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy93YXJlaG91c2UyL3dhcmVob3VzZTIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLGVBQWU7RUFDbEIscUJBQXFCO0VBQ3JCO0VBQ0E7TUFDSSxtQkFBbUI7TUFDbkIsNkJBQTZCO0VBQ2pDO0VBQ0E7TUFDSSxrQkFBa0I7TUFDbEIsYUFBYTtNQUNiLHNCQUFzQjtNQUN0QixZQUFZO01BQ1oscUJBQXFCO01BQ3JCLHNCQUFzQjtNQUN0QiwyQkFBMkI7TUFDM0IseUJBQXlCO01BQ3pCLG1CQUFtQjtFQUN2QjtFQUNBO01BQ0ksWUFBWTtNQUNaLFdBQVc7RUFDZjtFQUNBO01BQ0ksNEJBQTRCO0VBQ2hDO0VBQ0E7TUFDSSxnQkFBZ0I7TUFDaEIseUJBQXlCO01BQ3pCLHlCQUF5QjtNQUN6QixzQkFBc0I7RUFDMUI7RUFDQTtNQUNJLG1CQUFtQjtNQUNuQix5QkFBeUI7TUFDekIsV0FBVztNQUNYLGFBQWE7TUFDYixnQkFBZ0I7TUFDaEIsWUFBWTtNQUNaLHVCQUF1QjtNQUN2QixXQUFXO0VBQ2Y7RUFDQTtNQUNJLGdEQUFnRDtFQUNwRDtFQUNBO01BQ0ksK0JBQStCO0VBQ25DO0VBQ0E7TUFDSSx5QkFBeUI7TUFDekIsc0NBQXNDO0VBQzFDO0VBQ0E7TUFDSSx5QkFBeUI7TUFDekIscUNBQXFDO0VBQ3pDO0VBQ0E7TUFDSSwwQkFBMEI7RUFDOUI7RUFDQTtNQUNJLHFCQUFxQjtNQUNyQixxQkFBcUI7TUFDckIsY0FBYztNQUNkLGdCQUFnQjtNQUNoQixjQUFjO01BQ2QsV0FBVztNQUNYLGtCQUFrQjtNQUNsQixtQkFBbUI7TUFDbkIsd0JBQXdCO01BQ3hCLHNCQUFzQjtFQUMxQjs7RUFFQTtJQUNFLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiYm9keXttYXJnaW4tdG9wOjIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojZWVlO1xyXG4gIH1cclxuICAuY2FyZCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDAgMnB4IDNweCAjZTRlOGYwO1xyXG4gIH1cclxuICAuY2FyZCB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgbWluLXdpZHRoOiAwO1xyXG4gICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJhY2tncm91bmQtY2xpcDogYm9yZGVyLWJveDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VmZjBmMjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcclxuICB9XHJcbiAgLmF2YXRhci1tZCB7XHJcbiAgICAgIGhlaWdodDogNHJlbTtcclxuICAgICAgd2lkdGg6IDRyZW07XHJcbiAgfVxyXG4gIC5yb3VuZGVkLWNpcmNsZSB7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJSFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIC5pbWctdGh1bWJuYWlsIHtcclxuICAgICAgcGFkZGluZzogMC4yNXJlbTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjNmNztcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VmZjBmMjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMC43NXJlbTtcclxuICB9XHJcbiAgLmF2YXRhci10aXRsZSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjc2ZTE7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmJnLXNvZnQtcHJpbWFyeSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTksMTE4LDIyNSwuMjUpIWltcG9ydGFudDtcclxuICB9XHJcbiAgYSB7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIC5iYWRnZS1zb2Z0LWRhbmdlciB7XHJcbiAgICAgIGNvbG9yOiAjZjU2ZTZlICFpbXBvcnRhbnQ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ1LDExMCwxMTAsLjEpO1xyXG4gIH1cclxuICAuYmFkZ2Utc29mdC1zdWNjZXNzIHtcclxuICAgICAgY29sb3I6ICM2M2FkNmYgIWltcG9ydGFudDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg5OSwxNzMsMTExLC4xKTtcclxuICB9XHJcbiAgLm1iLTAge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAwIWltcG9ydGFudDtcclxuICB9XHJcbiAgLmJhZGdlIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBwYWRkaW5nOiAwLjI1ZW0gMC42ZW07XHJcbiAgICAgIGZvbnQtc2l6ZTogNzUlO1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwLjc1cmVtO1xyXG4gIH1cclxuXHJcbiAgLmNhcmQtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gIH1cclxuXHJcbiAgI2FkZC1idXR0b24ge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICB9XHJcblxyXG4gIC5jYXJkLWltYWdlIHtcclxuICAgIG1heC13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtaGVpZ2h0OiAxNTBweDtcclxuICB9XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Warehouse2Component","constructor","inventoryService","fb","id","name","brand","imageUrl","barcode","warehouseId","ngOnInit","getInventory","subscribe","response","inventoryItems","console","log","addInventory","addForm","document","getElementById","click","editInventoryItem","updateInventoryItem","itemToUpdate","deleteInventoryItem","deleteinventoryItem","sendToUpdateModal","inventoryItem","sentToDeleteModal","onOpenModal","mode","container","button","createElement","type","style","display","setAttribute","appendChild","selectors","inputs","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\components\\warehouse2\\warehouse2.component.ts","C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\components\\warehouse2\\warehouse2.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { InventoryService } from 'src/app/inventory.service';\nimport { InventoryItem } from 'src/app/inventoryItem';\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-warehouse1',\n  templateUrl: './warehouse2.component.html',\n  styleUrls: ['./warehouse2.component.css']\n})\nexport class Warehouse2Component implements OnInit{\n  title = 'warehouse-manager';\n  @Input()\n  warehouseId = 2;\n  inventoryItems!: InventoryItem[];\n  editForm!: FormGroup;\n\n  itemToUpdate: InventoryItem = {\n    id: 0,\n    name: \"\",\n    brand: \"\",\n    imageUrl: \"\",\n    barcode: \"\",\n    warehouseId: 2\n  }\n\n  itemsToDelete: InventoryItem = {\n    id: 0,\n    name: \"\",\n    brand: \"\",\n    imageUrl: \"\",\n    barcode: \"\",\n    warehouseId: 2\n  }\n\n\n  constructor(private inventoryService: InventoryService,\n              private fb: FormBuilder\n    ){}\n\n  ngOnInit(): void {\n    this.getInventory();\n  }\n\n\n  public getInventory(): void {\n    this.inventoryService.getInventory(this.warehouseId).subscribe(\n      (response: InventoryItem[]) => {\n        this.inventoryItems = response;\n      },\n    );\n    console.log(\"Inside the get method\")\n  }\n\n\n    addInventory(addForm: NgForm): void {\n      document.getElementById('add-inventory-button')?.click();\n      // console.log(addForm)\n    this.inventoryService.addInventory(addForm).subscribe(\n      (response) => {\n        console.log(response);\n        this.getInventory();\n      }\n    )\n    console.log(\"Inside the add method\")\n  }\n\n\n  editInventoryItem(): void {\n    this.inventoryService.updateInventoryItem(this.itemToUpdate).subscribe(\n      (response: InventoryItem) => {\n        console.log(response);\n        this.getInventory();\n      }\n    )\n    console.log(\"Inside the edit method\")\n  }\n\n  deleteInventoryItem() {\n    this.inventoryService.deleteinventoryItem(this.itemToUpdate.id).subscribe(\n      (response) =>{\n        console.log(response)\n        this.getInventory();\n      }\n\n    );\n    console.log(\"inside the delete method\")\n  }\n\n  sendToUpdateModal(inventoryItem: InventoryItem) {\n    this.itemToUpdate.id = inventoryItem.id;\n    this.itemToUpdate.brand = inventoryItem.brand;\n    this.itemToUpdate.name = inventoryItem.name;\n    this.itemToUpdate.imageUrl = inventoryItem.imageUrl;\n    this.itemToUpdate.barcode = inventoryItem.barcode;\n    this.itemToUpdate.warehouseId = inventoryItem.warehouseId;\n  }\n\n  sentToDeleteModal(inventoryItem: InventoryItem) {\n    this.itemToUpdate.id = inventoryItem.id;\n    this.itemToUpdate.brand = inventoryItem.brand;\n    this.itemToUpdate.name = inventoryItem.name;\n    this.itemToUpdate.imageUrl = inventoryItem.imageUrl;\n    this.itemToUpdate.barcode = inventoryItem.barcode;\n  }\n\n\n\n\n\n  public onOpenModal(inventoryItem: InventoryItem, mode: string): void {\n    const container = document.getElementById('main-container')\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal')\n\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addItemModal')\n    }\n    if (mode === 'edit') {\n      button.setAttribute('data-target', '#editItemModal')\n    }\n    console.log(\"inside onOpenModel\" + inventoryItem)\n    if (mode === 'delete') {\n      button.setAttribute('data-target', '#deleteItemModal')\n    }\n    container!.appendChild(button);\n    button.click();\n  }\n\n\n\n\n}\n","<p>warehouse2 works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}