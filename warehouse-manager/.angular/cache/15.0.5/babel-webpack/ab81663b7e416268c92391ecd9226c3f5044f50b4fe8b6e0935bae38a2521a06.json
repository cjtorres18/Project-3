{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./inventory.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./components/header/header.component\";\nimport * as i4 from \"./components/footer/footer.component\";\nexport class AppComponent {\n  constructor(inventoryService) {\n    this.inventoryService = inventoryService;\n    this.title = 'warehouse-manager';\n  }\n  ngOnInit() {\n    this.getInventoryItems();\n  }\n  // public getInventoryItems(): void {\n  //   this.inventoryService.getInventory().subscribe(\n  //     (response: InventoryItem[]) => {\n  //       this.inventoryItems = response;\n  //     },\n  //     (error: HttpErrorResponse) => {\n  //       alert(error.message);\n  //     }\n  //   );\n  // }\n  getInventoryItems() {\n    this.inventoryService.getInventory().subscribe(response => {\n      this.inventoryItems = response;\n    });\n  }\n  onAddItem(addForm) {\n    document.getElementById('add-inventory-form')?.click();\n    this.inventoryService.addInventory(addForm.value).subscribe(response => {\n      this.getInventoryItems;\n    });\n  }\n  onOpenModal(inventoryItem, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addItemModal');\n    }\n    if (mode === 'edit') {\n      button.setAttribute('data-target', '#editItemModal');\n    }\n    if (mode === 'delete') {\n      button.setAttribute('data-target', '#deleteItemModal');\n    }\n    container?.appendChild(button);\n    button.click();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.InventoryService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\")(2, \"app-footer\");\n    }\n  },\n  dependencies: [i2.RouterOutlet, i3.HeaderComponent, i4.FooterComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAaA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAHpC,UAAK,GAAG,mBAAmB;EAG6B;EAExDC,QAAQ;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEOA,iBAAiB;IACtB,IAAI,CAACF,gBAAgB,CAACG,YAAY,EAAE,CAACC,SAAS,CAC3CC,QAAyB,IAAI;MAC5B,IAAI,CAACC,cAAc,GAAGD,QAAQ;IAChC,CAAC,CAIF;EACH;EAEOE,SAAS,CAACC,OAAe;IAC9BC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAAEC,KAAK,EAAE;IACtD,IAAI,CAACX,gBAAgB,CAACY,YAAY,CAACJ,OAAO,CAACK,KAAK,CAAC,CAACT,SAAS,CACxDC,QAAuB,IAAI;MAC1B,IAAI,CAACH,iBAAiB;IACxB,CAAC,CAEF;EACH;EAEOY,WAAW,CAACC,aAA4B,EAAEC,IAAY;IAC3D,MAAMC,SAAS,GAAGR,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAC3D,MAAMQ,MAAM,GAAGT,QAAQ,CAACU,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,IAAI,GAAG,QAAQ;IACtBF,MAAM,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IAC7BJ,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC;IAC3C,IAAIP,IAAI,KAAK,KAAK,EAAE;MAClBE,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,eAAe,CAAC;;IAErD,IAAIP,IAAI,KAAK,MAAM,EAAE;MACnBE,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,gBAAgB,CAAC;;IAEtD,IAAIP,IAAI,KAAK,QAAQ,EAAE;MACrBE,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,kBAAkB,CAAC;;IAExDN,SAAS,EAAEO,WAAW,CAACN,MAAM,CAAC;IAC9BA,MAAM,CAACP,KAAK,EAAE;EAChB;;AA3DWb,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA2B;EAAAC;EAAAC;EAAAC;IAAA;MCbzBC,6BAAyB","names":["AppComponent","constructor","inventoryService","ngOnInit","getInventoryItems","getInventory","subscribe","response","inventoryItems","onAddItem","addForm","document","getElementById","click","addInventory","value","onOpenModal","inventoryItem","mode","container","button","createElement","type","style","display","setAttribute","appendChild","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\app.component.ts","C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\app.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { InventoryService } from './inventory.service';\r\nimport { InventoryItem } from './inventoryItem';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'warehouse-manager';\r\n  public inventoryItems!: InventoryItem[];\r\n\r\n  constructor(private inventoryService: InventoryService){}\r\n\r\n  ngOnInit(): void {\r\n    this.getInventoryItems();\r\n  }\r\n\r\n  // public getInventoryItems(): void {\r\n  //   this.inventoryService.getInventory().subscribe(\r\n  //     (response: InventoryItem[]) => {\r\n  //       this.inventoryItems = response;\r\n  //     },\r\n  //     (error: HttpErrorResponse) => {\r\n  //       alert(error.message);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  public getInventoryItems(): void {\r\n    this.inventoryService.getInventory().subscribe(\r\n      (response: InventoryItem[]) => {\r\n        this.inventoryItems = response;\r\n      },\r\n      // (error: HttpErrorResponse) => {\r\n      //   alert(error.message);\r\n      // }\r\n    );\r\n  }\r\n\r\n  public onAddItem(addForm: NgForm): void {\r\n    document.getElementById('add-inventory-form')?.click();\r\n    this.inventoryService.addInventory(addForm.value).subscribe(\r\n      (response: InventoryItem) => {\r\n        this.getInventoryItems;\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  public onOpenModal(inventoryItem: InventoryItem, mode: string): void {\r\n    const container = document.getElementById('main-container')\r\n    const button = document.createElement('button');\r\n    button.type = 'button';\r\n    button.style.display = 'none';\r\n    button.setAttribute('data-toggle', 'modal')\r\n    if (mode === 'add') {\r\n      button.setAttribute('data-target', '#addItemModal')\r\n    }\r\n    if (mode === 'edit') {\r\n      button.setAttribute('data-target', '#editItemModal')\r\n    }\r\n    if (mode === 'delete') {\r\n      button.setAttribute('data-target', '#deleteItemModal')\r\n    }\r\n    container?.appendChild(button);\r\n    button.click();\r\n  }\r\n\r\n\r\n}\r\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}