{"ast":null,"code":"import { enviroment } from 'enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = enviroment.apiBaseUrl;\n  }\n  getInventory(warehouseId) {\n    return this.http.get(`${this.apiServerUrl}/inventoryItem/all/` + warehouseId);\n  }\n  addInventory(inventoryItem) {\n    console.log(inventoryItem);\n    return this.http.post(this.apiServerUrl + \"/inventoryItem/add\", inventoryItem);\n  }\n  // handleError(error: HttpErrorResponse) {\n  //   return throwError(() => new Error('new error'))\n  // }\n  updateInventoryItem(inventoryItem) {\n    return this.http.put(this.apiServerUrl + \"/inventoryItem/update\", inventoryItem);\n  }\n  deleteinventoryItem(id) {\n    return this.http.delete(this.apiServerUrl + \"/inventoryItem/delete?id=\" + id);\n  }\n}\nInventoryService.ɵfac = function InventoryService_Factory(t) {\n  return new (t || InventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryService,\n  factory: InventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,QAAQ,wBAAwB;;;AAMnD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJvB,iBAAY,GAAGH,UAAU,CAACI,UAAU;EAIG;EAEjCC,YAAY,CAACC,WAAmB;IACrC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACC,YAAY,qBAAqB,GAAGF,WAAW,CAAC;EACpF;EAEOG,YAAY,CAACC,aAAkB;IACpCC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;IAC1B,OAAO,IAAI,CAACP,IAAI,CAACU,IAAI,CAAE,IAAI,CAACL,YAAY,GAAG,oBAAoB,EAAGE,aAAa,CAAC;EAClF;EAEA;EACA;EACA;EAEOI,mBAAmB,CAACJ,aAA4B;IACrD,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAAO,IAAI,CAACP,YAAY,GAAG,uBAAuB,EAAIE,aAAa,CAAC;EAC1F;EAIOM,mBAAmB,CAACC,EAAU;IACnC,OAAO,IAAI,CAACd,IAAI,CAACe,MAAM,CAAC,IAAI,CAACV,YAAY,GAAG,2BAA2B,GAAGS,EAAE,CAAC;EAC/E;;AA5BWhB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAkB,SAAhBlB,gBAAgB;EAAAmB,YAFf;AAAM","names":["enviroment","InventoryService","constructor","http","apiBaseUrl","getInventory","warehouseId","get","apiServerUrl","addInventory","inventoryItem","console","log","post","updateInventoryItem","put","deleteinventoryItem","id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\inventory.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { InventoryItem } from './inventoryItem';\r\nimport { enviroment } from 'enviroments/enviroment';\r\nimport { Warehouse1Component } from './components/warehouse1/warehouse1.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n   apiServerUrl = enviroment.apiBaseUrl;\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getInventory(warehouseId: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiServerUrl}/inventoryItem/all/` + warehouseId)\r\n  }\r\n\r\n  public addInventory(inventoryItem: any) {\r\n    console.log(inventoryItem);\r\n    return this.http.post((this.apiServerUrl + \"/inventoryItem/add\"), inventoryItem)\r\n  }\r\n\r\n  // handleError(error: HttpErrorResponse) {\r\n  //   return throwError(() => new Error('new error'))\r\n  // }\r\n\r\n  public updateInventoryItem(inventoryItem: InventoryItem): Observable<any> {\r\n    return this.http.put<any>((this.apiServerUrl + \"/inventoryItem/update\") , inventoryItem)\r\n  }\r\n\r\n\r\n\r\n  public deleteinventoryItem(id: number){\r\n    return this.http.delete(this.apiServerUrl + \"/inventoryItem/delete?id=\" + id)\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}