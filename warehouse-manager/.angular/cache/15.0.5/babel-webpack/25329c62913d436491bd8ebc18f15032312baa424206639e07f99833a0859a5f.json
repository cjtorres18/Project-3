{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet Warehouse1Component = class Warehouse1Component {\n  constructor(inventoryService) {\n    this.inventoryService = inventoryService;\n    this.title = 'warehouse-manager';\n  }\n  ngOnInit() {\n    this.getInventory();\n  }\n  getInventory() {\n    this.inventoryService.getInventory().subscribe(response => {\n      this.inventoryItems = response;\n    });\n    console.log(\"Inside the get method\");\n  }\n  addInventory(addForm) {\n    document.getElementById('add-inventory-button')?.click();\n    console.log(addForm);\n    this.inventoryService.addInventory(addForm).subscribe(response => {\n      console.log(response);\n      this.getInventory();\n    });\n    console.log(\"Inside the add method\");\n  }\n  updateInventory(inventoryItem) {\n    this.inventoryService.updateInventory(inventoryItem).subscribe(response => {\n      console.log(response);\n      this.getInventory();\n    });\n    console.log(\"Inside the add method\");\n  }\n  onOpenModal(inventoryItem, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addItemModal');\n    }\n    if (mode === 'edit') {\n      this.editInventoryItem = inventoryItem;\n      button.setAttribute('data-target', '#editItemModal');\n    }\n    if (mode === 'delete') {\n      button.setAttribute('data-target', '#deleteItemModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n};\nWarehouse1Component = __decorate([Component({\n  selector: 'app-warehouse1',\n  templateUrl: './warehouse1.component.html',\n  styleUrls: ['./warehouse1.component.css']\n})], Warehouse1Component);\nexport { Warehouse1Component };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAJpC,UAAK,GAAG,mBAAmB;EAI6B;EAExDC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAGOA,YAAY;IACjB,IAAI,CAACF,gBAAgB,CAACE,YAAY,EAAE,CAACC,SAAS,CAC3CC,QAAyB,IAAI;MAC5B,IAAI,CAACC,cAAc,GAAGD,QAAQ;IAChC,CAAC,CACF;IACDE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EAGEC,YAAY,CAACC,OAAe;IAC1BC,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC,EAAEC,KAAK,EAAE;IACxDN,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;IACtB,IAAI,CAACT,gBAAgB,CAACQ,YAAY,CAACC,OAAO,CAAC,CAACN,SAAS,CAClDC,QAAQ,IAAI;MACXE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,IAAI,CAACF,YAAY,EAAE;IACrB,CAAC,CACF;IACDI,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EAGAM,eAAe,CAACC,aAA4B;IAC5C,IAAI,CAACd,gBAAgB,CAACa,eAAe,CAACC,aAAa,CAAC,CAACX,SAAS,CAC3DC,QAAQ,IAAI;MACXE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,IAAI,CAACF,YAAY,EAAE;IACrB,CAAC,CACF;IACDI,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EAESQ,WAAW,CAACD,aAA4B,EAAEE,IAAY;IAC3D,MAAMC,SAAS,GAAGP,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAC3D,MAAMO,MAAM,GAAGR,QAAQ,CAACS,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,IAAI,GAAG,QAAQ;IACtBF,MAAM,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IAC7BJ,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC;IAC3C,IAAIP,IAAI,KAAK,KAAK,EAAE;MAClBE,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,eAAe,CAAC;;IAErD,IAAIP,IAAI,KAAK,MAAM,EAAE;MACnB,IAAI,CAACQ,iBAAiB,GAAGV,aAAa;MACtCI,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,gBAAgB,CAAC;;IAEtD,IAAIP,IAAI,KAAK,QAAQ,EAAE;MACrBE,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,kBAAkB,CAAC;;IAExDN,SAAU,CAACQ,WAAW,CAACP,MAAM,CAAC;IAC9BA,MAAM,CAACN,KAAK,EAAE;EAChB;CAKD;AApEYd,mBAAmB,eAL/BD,SAAS,CAAC;EACT6B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW9B,mBAAmB,CAoE/B;SApEYA,mBAAmB","names":["Component","Warehouse1Component","constructor","inventoryService","ngOnInit","getInventory","subscribe","response","inventoryItems","console","log","addInventory","addForm","document","getElementById","click","updateInventory","inventoryItem","onOpenModal","mode","container","button","createElement","type","style","display","setAttribute","editInventoryItem","appendChild","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\components\\warehouse1\\warehouse1.component.ts"],"sourcesContent":["\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from 'src/app/inventory.service';\r\nimport { InventoryItem } from 'src/app/inventoryItem';\r\nimport { NgForm } from '@angular/forms'\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-warehouse1',\r\n  templateUrl: './warehouse1.component.html',\r\n  styleUrls: ['./warehouse1.component.css']\r\n})\r\nexport class Warehouse1Component implements OnInit{\r\n  title = 'warehouse-manager';\r\n  public inventoryItems!: InventoryItem[];\r\n  public editInventoryItem!: InventoryItem;\r\n\r\n  constructor(private inventoryService: InventoryService){}\r\n\r\n  ngOnInit(): void {\r\n    this.getInventory();\r\n  }\r\n\r\n\r\n  public getInventory(): void {\r\n    this.inventoryService.getInventory().subscribe(\r\n      (response: InventoryItem[]) => {\r\n        this.inventoryItems = response;\r\n      },\r\n    );\r\n    console.log(\"Inside the get method\")\r\n  }\r\n\r\n\r\n    addInventory(addForm: NgForm): void {\r\n      document.getElementById('add-inventory-button')?.click();\r\n      console.log(addForm)\r\n    this.inventoryService.addInventory(addForm).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.getInventory();\r\n      }\r\n    )\r\n    console.log(\"Inside the add method\")\r\n  }\r\n\r\n\r\n  updateInventory(inventoryItem: InventoryItem): void {\r\n  this.inventoryService.updateInventory(inventoryItem).subscribe(\r\n    (response) => {\r\n      console.log(response);\r\n      this.getInventory();\r\n    }\r\n  )\r\n  console.log(\"Inside the add method\")\r\n}\r\n\r\n  public onOpenModal(inventoryItem: InventoryItem, mode: string): void {\r\n    const container = document.getElementById('main-container')\r\n    const button = document.createElement('button');\r\n    button.type = 'button';\r\n    button.style.display = 'none';\r\n    button.setAttribute('data-toggle', 'modal')\r\n    if (mode === 'add') {\r\n      button.setAttribute('data-target', '#addItemModal')\r\n    }\r\n    if (mode === 'edit') {\r\n      this.editInventoryItem = inventoryItem;\r\n      button.setAttribute('data-target', '#editItemModal')\r\n    }\r\n    if (mode === 'delete') {\r\n      button.setAttribute('data-target', '#deleteItemModal')\r\n    }\r\n    container!.appendChild(button);\r\n    button.click();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}