{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { enviroment } from 'enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = enviroment.apiBaseUrl;\n  }\n  getInventory() {\n    return this.http.get(`${this.apiServerUrl}/inventoryItem/all`);\n  }\n  addInventory(inventoryItem) {\n    console.log(inventoryItem);\n    return this.http.post(this.apiServerUrl + \"/inventoryItem/add\", inventoryItem).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    return throwError(() => new Error('new error'));\n  }\n  updateInventoryItem(inventoryItem) {\n    return this.http.put(this.apiServerUrl + \"/inventoryItem/update\", inventoryItem).pipe(catchError(this.handleError));\n  }\n  deleteinventoryItem(id) {\n    return this.http.delete(this.apiServerUrl + \"/inventoryItem/delete?id=\" + id);\n  }\n}\nInventoryService.ɵfac = function InventoryService_Factory(t) {\n  return new (t || InventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryService,\n  factory: InventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAcC,UAAU,QAAQ,MAAM;AAEzD,SAASC,UAAU,QAAQ,wBAAwB;;;AAMnD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJvB,iBAAY,GAAGH,UAAU,CAACI,UAAU;EAIG;EAEjCC,YAAY;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACC,YAAY,oBAAoB,CAAC;EACrE;EAEOC,YAAY,CAACC,aAAkB;IACpCC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACS,IAAI,CAAE,IAAI,CAACL,YAAY,GAAG,oBAAoB,EAAGE,aAAa,CAAC,CAACI,IAAI,CAACf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EACrH;EAEAA,WAAW,CAACC,KAAwB;IAClC,OAAOhB,UAAU,CAAC,MAAM,IAAIiB,KAAK,CAAC,WAAW,CAAC,CAAC;EACjD;EAEOC,mBAAmB,CAACR,aAA4B;IACrD,OAAO,IAAI,CAACN,IAAI,CAACe,GAAG,CAAO,IAAI,CAACX,YAAY,GAAG,uBAAuB,EAAIE,aAAa,CAAC,CAACI,IAAI,CAACf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EAC7H;EAIOK,mBAAmB,CAACC,EAAU;IACnC,OAAO,IAAI,CAACjB,IAAI,CAACkB,MAAM,CAAC,IAAI,CAACd,YAAY,GAAG,2BAA2B,GAAGa,EAAE,CAAC;EAC/E;;AA5BWnB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAqB,SAAhBrB,gBAAgB;EAAAsB,YAFf;AAAM","names":["catchError","throwError","enviroment","InventoryService","constructor","http","apiBaseUrl","getInventory","get","apiServerUrl","addInventory","inventoryItem","console","log","post","pipe","handleError","error","Error","updateInventoryItem","put","deleteinventoryItem","id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\inventory.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { InventoryItem } from './inventoryItem';\r\nimport { enviroment } from 'enviroments/enviroment';\r\nimport { Warehouse1Component } from './components/warehouse1/warehouse1.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n   apiServerUrl = enviroment.apiBaseUrl;\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getInventory(): Observable<any> {\r\n    return this.http.get<any>(`${this.apiServerUrl}/inventoryItem/all`)\r\n  }\r\n\r\n  public addInventory(inventoryItem: any) {\r\n    console.log(inventoryItem);\r\n    return this.http.post((this.apiServerUrl + \"/inventoryItem/add\"), inventoryItem).pipe(catchError(this.handleError))\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse): Observable<never> {\r\n    return throwError(() => new Error('new error'))\r\n  }\r\n\r\n  public updateInventoryItem(inventoryItem: InventoryItem): Observable<any> {\r\n    return this.http.put<any>((this.apiServerUrl + \"/inventoryItem/update\") , inventoryItem).pipe(catchError(this.handleError))\r\n  }\r\n\r\n\r\n\r\n  public deleteinventoryItem(id: number){\r\n    return this.http.delete(this.apiServerUrl + \"/inventoryItem/delete?id=\" + id)\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}