{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { enviroment } from 'enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = enviroment.apiBaseUrl;\n  }\n  getInventory() {\n    return this.http.get(`${this.apiServerUrl}/inventoryItem/all`);\n  }\n  addInventory(inventoryItem) {\n    return this.http.post(this.apiServerUrl, inventoryItem).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    return throwError(() => new Error('new error'));\n  }\n  updateInventory(inventoryItem) {\n    return this.http.put(`${this.apiServerUrl}/inventoryItem/update`, inventoryItem);\n  }\n  deleteInventory(inventoryItemId) {\n    return this.http.delete(`${this.apiServerUrl}/inventoryItem/delete/${inventoryItemId}`);\n  }\n}\nInventoryService.ɵfac = function InventoryService_Factory(t) {\n  return new (t || InventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryService,\n  factory: InventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAcC,UAAU,QAAQ,MAAM;AAEzD,SAASC,UAAU,QAAQ,wBAAwB;;;AAMnD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJvB,iBAAY,GAAGH,UAAU,CAACI,UAAU;EAIG;EAEjCC,YAAY;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACC,YAAY,oBAAoB,CAAC;EACrE;EAEOC,YAAY,CAACC,aAAkB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACH,YAAY,EAAEE,aAAa,CAAC,CAACE,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EAC5F;EAEAA,WAAW,CAACC,KAAwB;IAClC,OAAOd,UAAU,CAAC,MAAM,IAAIe,KAAK,CAAC,WAAW,CAAC,CAAC;EACjD;EAEOC,eAAe,CAACN,aAA4B;IACjD,OAAO,IAAI,CAACN,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACT,YAAY,uBAAuB,EAAEE,aAAa,CAAC;EACvF;EAEOQ,eAAe,CAACC,eAAuB;IAC5C,OAAO,IAAI,CAACf,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACZ,YAAY,yBAAyBW,eAAe,EAAE,CAAC;EAC/F;;AAzBWjB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAmB,SAAhBnB,gBAAgB;EAAAoB,YAFf;AAAM","names":["catchError","throwError","enviroment","InventoryService","constructor","http","apiBaseUrl","getInventory","get","apiServerUrl","addInventory","inventoryItem","post","pipe","handleError","error","Error","updateInventory","put","deleteInventory","inventoryItemId","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pforb\\OneDrive\\Desktop\\warehouse-manager-app\\Project-3\\warehouse-manager\\src\\app\\inventory.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { InventoryItem } from './inventoryItem';\r\nimport { enviroment } from 'enviroments/enviroment';\r\nimport { Warehouse1Component } from './components/warehouse1/warehouse1.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n   apiServerUrl = enviroment.apiBaseUrl;\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getInventory(): Observable<any> {\r\n    return this.http.get<any>(`${this.apiServerUrl}/inventoryItem/all`)\r\n  }\r\n\r\n  public addInventory(inventoryItem: any) {\r\n    return this.http.post(this.apiServerUrl, inventoryItem).pipe(catchError(this.handleError))\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    return throwError(() => new Error('new error'))\r\n  }\r\n\r\n  public updateInventory(inventoryItem: InventoryItem): Observable<any> {\r\n    return this.http.put<any>(`${this.apiServerUrl}/inventoryItem/update`, inventoryItem)\r\n  }\r\n\r\n  public deleteInventory(inventoryItemId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiServerUrl}/inventoryItem/delete/${inventoryItemId}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}